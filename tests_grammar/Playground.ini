[config]
ts2python.RenderAnonymous       = "local"
ts2python.UseTypeUnion          = True
ts2python.UseExplicitTypeAlias  = True
ts2python.UseTypeParameters     = False
ts2python.UseLiteralType        = True
ts2python.UseVariadicGenerics   = True
ts2python.UseNotRequired        = True
ts2python.AllowReadOnly         = True

[match:document]
M0: """export interface WorkspaceConfiguration {
		inspect<T>(section: string): {
			key: string;
			defaultValue?: T;
			languageIds?: string[];
		} | undefined;
		readonly [key: string]: any;
	}"""

[py:document]
M0: """
	T = TypeVar('T')
    class WorkspaceConfiguration:
        class InspectWorkspaceConfiguration_0(TypedDict):
            key: str
            defaultValue: NotRequired[T]
            languageIds: NotRequired[List[str]]

        def inspect(self, section: str) -> InspectWorkspaceConfiguration_0 | None:
            pass"""