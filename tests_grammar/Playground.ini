[config]
ts2python.RenderAnonymous       = "local"
ts2python.UseTypeUnion          = False
ts2python.UseExplicitTypeAlias  = False
ts2python.UseTypeParameters     = False
ts2python.UseLiteralType        = False
ts2python.UseVariadicGenerics   = False
ts2python.UseNotRequired        = False
ts2python.AllowReadOnly         = False

[match:types]
M1: "string | { language: string; value: string }"

[match:document]
M1: """export interface WorkspaceConfiguration {
		inspect<T>(section: string): {
			key: string;
			defaultValue?: T;
			languageIds?: string[];
		} | undefined;
		readonly [key: string]: any;
	}"""

[py:document]
M1: """
    class WorkspaceConfiguration:
        T = TypeVar('T')

        class InspectWorkspaceConfiguration_0(TypedDict):
            key: str
            defaultValue: NotRequired[T]
            languageIds: NotRequired[List[str]]

        def inspect(self, section: str) -> InspectWorkspaceConfiguration_0 | None:
            pass"""