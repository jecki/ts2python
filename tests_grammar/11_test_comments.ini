[config]
ts2python.RenderAnonymous          = "toplevel"
ts2python.UsePostponedEvaluation   = True
ts2python.UseTypeUnion             = True
ts2python.UseExplicitTypeAlias     = True
ts2python.UseTypeParameters        = True
ts2python.UseLiteralType           = True
ts2python.UseVariadicGenerics      = True
ts2python.UseNotRequired           = True
ts2python.AllowReadOnly            = True
ts2python.AssumeDeferredEvaluation = False
ts2python.KeepMultilineComments    = True

[match:namespace]
M1: """export namespace ErrorCodes {
        // Defined by JSON-RPC
        export const ParseError: integer = -32700;
        export const InvalidRequest: integer = -32600;
        export const MethodNotFound: integer = -32601;
        export const InvalidParams: integer = -32602;
        export const InternalError: integer = -32603;

        /**
         * This is the start range of JSON-RPC reserved error codes.
         * It doesn't denote a real error code. No LSP error codes should
         * be defined between the start and end range. For backwards
         * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`
         * are left in the range.
         *
         * @since 3.16.0
         */
        export const jsonrpcReservedErrorRangeStart: integer = -32099;
        /** @deprecated use jsonrpcReservedErrorRangeStart */
        export const serverErrorStart: integer = jsonrpcReservedErrorRangeStart;

        /**
         * Error code indicating that a server received a notification or
         * request before the server has received the `initialize` request.
         */
        export const ServerNotInitialized: integer = -32002;
        export const UnknownErrorCode: integer = -32001;

        /**
         * This is the end range of JSON-RPC reserved error codes.
         * It doesn't denote a real error code.
         *
         * @since 3.16.0
         */
        export const jsonrpcReservedErrorRangeEnd = -32000;
        /** @deprecated use jsonrpcReservedErrorRangeEnd */
        export const serverErrorEnd: integer = jsonrpcReservedErrorRangeEnd;

        /**
         * This is the start range of LSP reserved error codes.
         * It doesn't denote a real error code.
         *
         * @since 3.16.0
         */
        export const lspReservedErrorRangeStart: integer = -32899;

        /**
         * A request failed but it was syntactically correct, e.g the
         * method name was known and the parameters were valid. The error
         * message should contain human readable information about why
         * the request failed.
         *
         * @since 3.17.0
         */
        export const RequestFailed: integer = -32803;

        /**
         * The server cancelled the request. This error code should
         * only be used for requests that explicitly support being
         * server cancellable.
         *
         * @since 3.17.0
         */
        export const ServerCancelled: integer = -32802;

        /**
         * The server detected that the content of a document got
         * modified outside normal conditions. A server should
         * NOT send this error code if it detects a content change
         * in its unprocessed messages. The result even computed
         * on an older state might still be useful for the client.
         *
         * If a client decides that a result is not of any use anymore
         * the client should cancel the request.
         */
        export const ContentModified: integer = -32801;

        /**
         * The client has canceled a request and a server has detected
         * the cancel.
         */
        export const RequestCancelled: integer = -32800;

        /**
         * This is the end range of LSP reserved error codes.
         * It doesn't denote a real error code.
         *
         * @since 3.16.0
         */
        export const lspReservedErrorRangeEnd: integer = -32800;
    }"""

[py:namespace]
M1: """
    class ErrorCodes:
        # Defined by JSON-RPC
        ParseError: int = -32700
        InvalidRequest: int = -32600
        MethodNotFound: int = -32601
        InvalidParams: int = -32602
        InternalError: int = -32603

        # This is the start range of JSON-RPC reserved error codes.
        # It doesn始t denote a real error code. No LSP error codes should
        # be defined between the start and end range. For backwards
        # compatibility the `ServerNotInitialized` and the `UnknownErrorCode`
        # are left in the range.

        # @since 3.16.0
        jsonrpcReservedErrorRangeStart: int = -32099

        # @deprecated use jsonrpcReservedErrorRangeStart
        serverErrorStart: int = jsonrpcReservedErrorRangeStart

        # Error code indicating that a server received a notification or
        # request before the server has received the `initialize` request.
        ServerNotInitialized: int = -32002
        UnknownErrorCode: int = -32001

        # This is the end range of JSON-RPC reserved error codes.
        # It doesn始t denote a real error code.

        # @since 3.16.0
        jsonrpcReservedErrorRangeEnd: Any = -32000

        # @deprecated use jsonrpcReservedErrorRangeEnd
        serverErrorEnd: int = jsonrpcReservedErrorRangeEnd

        # This is the start range of LSP reserved error codes.
        # It doesn始t denote a real error code.

        # @since 3.16.0
        lspReservedErrorRangeStart: int = -32899

        # A request failed but it was syntactically correct, e.g the
        # method name was known and the parameters were valid. The error
        # message should contain human readable information about why
        # the request failed.

        # @since 3.17.0
        RequestFailed: int = -32803

        # The server cancelled the request. This error code should
        # only be used for requests that explicitly support being
        # server cancellable.

        # @since 3.17.0
        ServerCancelled: int = -32802

        # The server detected that the content of a document got
        # modified outside normal conditions. A server should
        # NOT send this error code if it detects a content change
        # in its unprocessed messages. The result even computed
        # on an older state might still be useful for the client.

        # If a client decides that a result is not of any use anymore
        # the client should cancel the request.
        ContentModified: int = -32801

        # The client has canceled a request and a server has detected
        # the cancel.
        RequestCancelled: int = -32800

        # This is the end range of LSP reserved error codes.
        # It doesn始t denote a real error code.

        # @since 3.16.0
        lspReservedErrorRangeEnd: int = -32800
    """

[match:document]
M1: """
    type DocumentUri = string;

    type URI = string;


    /* source file: "types/regexp.md" */

    /**
     * Client capabilities specific to regular expressions.
     */
    export interface RegularExpressionsClientCapabilities {
        /**
         * The engine's name.
         */
        engine: string;

        /**
         * The engine's version.
         */
        version?: string;
    }
    """

M2: """export type TextDocumentContentChangeEvent = {
        /**
         * The range of the document that changed.
         */
        range: Range;

        /**
         * The optional length of the range that got replaced.
         *
         * @deprecated use range instead.
         */
        rangeLength?: uinteger;

        /**
         * The new text for the provided range.
         */
        text: string;
    } | {
        /**
         * The new text of the whole document.
         */
        text: string;
    };"""

[py:document]
M2: """
    class TextDocumentContentChangeEvent_0(TypedDict):

        # The range of the document that changed.
        range: Range

        # The optional length of the range that got replaced.

        # @deprecated use range instead.
        rangeLength: NotRequired[int]

        # The new text for the provided range.
        text: str
    class TextDocumentContentChangeEvent_1(TypedDict):

        # The new text of the whole document.
        text: str
    type TextDocumentContentChangeEvent = TextDocumentContentChangeEvent_0 | TextDocumentContentChangeEvent_1"""