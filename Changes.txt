Version 0.8.0
-------------
- ts2pythonExplorer: A GUI interfaces for exploring and using ts2python
- Python 3.14 support (via the "--compatibility 3.14" switch)
- Postponed evalaution (PEP 563) and deferred evaluation
  (Python 3.14 and higher) is now supported with the "--peps 563"
  and "--peps 649" switches, respectively.
- type-statements are now used instead of TypeAlias for Python
  compatibility level >= 3.12
- Typescript's "readonly" is now transpiled to Python's "ReadOnly[...]"
  for Python compatibility level >= 3.13
- bugfix: configuration-flag UseTypeParameters (for Python
  version 3.12 and above) is not ignored, anymore
- Removed --base (Base-Class) and --decorator switches from command line
  options. Base-class now always defaults to TypedDict, and no additional
  decorators will be added
- ts2pythonParser skript has a new option --target that allows to select
  the abstract-syntax-tree as compilation target rahter than the final
  Python file
- typo-corrections and some updates to the documentation


Version 0.7.6
-------------
- Typescript Records are not translated to Dict[]-types
- Omitted semicolons do not cause the parser to fail, anymore


Version 0.7.5
-------------
- bugfixes related to comments
- bugs #21, #19
- several changes to make ts2python digest the current vscode.d.ts


Version 0.7.4
-------------
- comments can be preserved: option "-k" or "--comments". Exception:
  Inline comments, e.g. "dog /* my little dog */: int", will not be preserved


Version 0.7.3
-------------
- better packaging


Version 0.7.2
-------------
- bugfixes
- more advanced types supported (by the parser only! which
  means they are read but may not be translated to Python
  very well)


Version 0.7.1
-------------
- rendering of anonymous interfaces as toplevel-TypedDicts now
  possible (use switch -a toplevel) to avoid error messages by
  type checkers
- added rudimentary support for more advanced types, e.g.
  "type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }"
  Caveat: Not all of these constructs are supported and, if they are supported,
  they will appear strongly simplified on the Python side, often simply by
  using "Any". But at least some of the constructs will be parsed, now.


Version 0.6.9
-------------
- read (but ignore) TypeScript imports
- add alternative ways to render anonymous interfaces as TypedDicts:
  Apart from "local" (default), now "functional" and "type" can
  be selected. "type" is still experimental


Version 0.6.8
-------------

- Use of NotRequired (PEP 655) instead of "Optional" is now default.
- typeddict_shim is not needed, anymore, for Python 3.11 and above.
- compatibility with DHParser 1.4.2
