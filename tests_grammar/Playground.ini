[config]
ts2python.RenderAnonymous       = "local"
ts2python.UseTypeUnion          = True
ts2python.UseTypeParameters     = True
ts2python.UseLiteralType        = True
ts2python.UseVariadicGenerics   = True
ts2python.UseNotRequired        = True

[match:interface]
M1: """interface PromiseLike<T> {
      then<TResult1 = T, TResult2 = never>(
        onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
        onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
      ): PromiseLike<TResult1 | TResult2>;
    }"""

[py:interface]
M1: """class PromiseLike[T]:

        def then[TResult1, TResult2](self, onfulfilled: Optional[Callable[[T], 'TResult1 | PromiseLike[TResult1]'] | None] = None, onrejected: Optional[Callable[[Any], 'TResult2 | PromiseLike[TResult2]'] | None] = None) -> 'PromiseLike[TResult1 | TResult2]':
            pass"""
